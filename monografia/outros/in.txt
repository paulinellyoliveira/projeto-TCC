

Atualmente está sendo cada vez mais necessário o aumento da capacidade de processamento dos computadores, devido a novas necessidades que vêm surgindo nas mais diversas atividades e áreas do conhecimento – principalmente com simulações de problemas relacionados à ciência e à engenharia. Nesse contexto o conjunto de dados a ser tratado torna-se cada vez maior devido à facilidade de armazenamento destes dados, o que gera uma grande demanda de recursos computacionais para armazenamento, recuperação, processamento e transmissão de informações. Consequentemente a extração de informações relevantes torna-se ainda mais trabalhosa. (LIMA, 2016. p. 16).

Ao longo dos anos várias técnicas foram utilizadas para melhorar a organização do computador a fim de aumentar a velocidade de processamento como o uso de memória virtual, unidades de armazenamento externas que não usam discos, hierarquia de barramentos, redução do tamanho dos componentes do microprocessador (o que reduz a distância entre os componentes), pipelines, etc. Na arquitetura também houve melhorias, como conjunto de instruções RISC, previsão de desvio, análise do fluxo de dados, execução especulativa, entre outros. Ainda assim o equilíbrio do desempenho foi necessário para evitar que as melhorias de um componente fossem anuladas pelos atrasos de outros, como exemplo, pode-se citar o desenvolvimento hierarquia de memória (que consiste em múltiplos níveis de memória com diferentes velocidades e tamanhos), memória cache, caminhos de dados entre memória e processador mais largos e chips de memória mais inteligentes, isso porque o desenvolvimento da memória principal não acompanhou o do processador. Contudo, mesmo com estes recursos ainda existem limites físicos como a frequência suportada pelo silício (STALLINGS, 2002 e STALLINGS, 2010). Desta forma, para contornar o problema os projetistas de processadores começaram a colocar vários núcleos num mesmo chip a fim de ser possível o processamento paralelo real.

Para resolver esses problemas, os designers de processadores passaram a projetar circuitos que pudessem processar dados em paralelo, ou seja, ao invés de tentarem aumentar o poder de processamento de um único núcleo do processador, incluindo mais transistores, os designers passaram a considerar a criação de processadores com muitos núcleos em um único circuito integrado. Tais circuitos são conhecidos como processadores multicore. Ao tirar proveito do paralelismo com processadores compostos por vários núcleos, foi possível elevar o poder de processamento a taxas mais altas do que as que vinham sendo alcançadas quando apenas um núcleo era utilizado. (LIMA, 2016. p. 16).

Desde os trabalhos de Von Neumann (1945) apud Navaux, De Rose e Pilla (2011) arquiteturas paralelas já eram consideradas soluções com maior capacidade de processamento em execuções com grandes volumes de processamento. Nos anos 70, quando as tecnologias computacionais passaram a não ser mais suficientes para suprir as demandas de processamento, deu-se início da utilização de técnicas de concorrência para se ter maior desempenho. Limitações como altos custos, tendenciaram o desenvolvimento de sistemas com vários núcleos juntos, nos chips de microprocessadores, processadores e até mesmo dos supercomputadores. Assim tem-se várias unidades ativas (ou núcleos) trabalhando de forma no paralela na mesma aplicação para que se tenha uma redução no tempo de execução da mesma. (NAVAUX, DE ROSE e PILLA, 2011).

Além destes avanços, FULLER e MILLET (2011) mostram que em função do ciclo virtuoso em que a tecnologia se encontra a aplicação da computação em diversos outros sistemas podem ser vistos, como por exemplo, nos atuais smartphones, smarTV’s e sistemas embarcados que possuem componentes para computação de propósito geral e específico. Um destes modelos é o Raspberry Pi (que, basicamente é um pequeno computador) que possui processador, memória, comunicação com dispositivos de entrada e saída, entre outros.

Sendo assim, este trabalho propõe o desenvolvimento de uma metodologia para comparar o desempenho de programas de forma sequencial e também de forma paralela em duas diferentes arquiteturas, ambas de propósito geral: plataforma Raspberry Pi e um computador desktop.

1.1 Objetivos
Para o desenvolvimento deste trabalho, foram definidos alguns objetivos (gerais e específicos) aos quais são apresentados nas subseções a seguir.
1.1.1 Objetivo Geral:
Comparar o desempenho computacional paralelo e sequencial do Raspberry Pi em relação à computadores (desktops).
1.1.2 Objetivos Específicos 

	a. Definir o algoritmo a ser utilizado no trabalho a fim de utilizar o máximo possível do hardware em ambos os cenários;	
	b. Implementar o algoritmo para execução utilizando programação paralela e/ou distribuída.	
	c. Avaliar o desempenho computacional nas 2 arquiteturas propostas.
1.2 Justificativa
Este trabalho tem como justificativa o uso de um computador de baixo custo que apresenta desempenho significativo e que está se tornando cada vez mais popular nos dias atuais e sua comparação com um computador que já é utilizado. Há também a utilização de uma técnica que foi desenvolvida como solução para melhorar o desempenho dos processadores, que é a programação paralela, aproveitando todos os núcleos disponíveis. Como foi apresentado anteriormente, processadores multicore são uma das soluções desenvolvidas para melhorar a capacidade de processamento visto que já não está sendo possível diminuir o tamanho físico dos transistores com a atual tecnologia de semicondutores. É importante ressaltar que na nossa instituição não há trabalhos científicos utilizando o Raspberry Pi, sendo assim este trabalho serve de alicerce para futuros trabalhos.
1.3 Organização do Trabalho
Para um melhor entendimento deste trabalho, o mesmo foi dividido em alguns capítulos. O capítulo 2 apresenta o referencial teórico, onde são descritos todos os termos e elementos necessários para uma melhor compreensão do trabalho. O capítulo 3 apresenta a revisão de literatura, em que é mostrado os trabalhos existentes correlatos a este, quais foram suas metodologias e resultados e, ao final como este trabalho se difere dos demais. O capítulo 4 apresenta os materiais e métodos utilizados para o desenvolvimento deste trabalho, em outras palavras são descritas as técnicas e métricas utilizadas neste trabalho. O capítulo 5 apresenta os resultados e discussões obtidos após a execução da metodologia descrita no capítulo 4 e faz uma comparação com os resultados dos trabalhos descritos no capítulo 3. O capítulo 6 apresenta as conclusões obtidas com base nos resultados descritos no capítulo 5 e nos objetivos proposto no capítulo 1, quais limitações foram notadas, quais possíveis trabalhos futuros podem desenvolvidos. Por fim, o capítulo de referenciais apresenta a identificação e origem dos trabalhos consultados para o desenvolvimento deste.
